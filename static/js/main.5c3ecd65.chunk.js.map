{"version":3,"sources":["assets/noPosterSmall.png","assets/imdbIcon.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","collectionsApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","ImdbLink","CompaniesContainer","Company","img","VideoContainer","Video","iframe","CollectionContainer","CollectionName","h4","CollectionLink","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","overview","production_companies","company","logo_path","src","alt","videos","key","frameborder","allow","allowfullscreen","belongs_to_collection","replace","DetailContainer","includes","match","push","history","isNaN","CollectionPresenter","parts","path","exact","component","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c3ecd65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","export default __webpack_public_path__ + \"static/media/imdbIcon.e4371774.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background: url(${(props) => props.bgUrl}) center;\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Naflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date?.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcomig Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date?.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date?.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color={\"#e74c3c\"} text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"818824afc2c5572a406037e215c9426d\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const collectionsApi = {\n  collectionDetail: (id) => api.get(`collection/${id}`),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Naflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date?.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date?.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date?.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color={\"#e74c3c\"} text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.topRated();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Naflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date?.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date?.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color={\"#e74c3c\"} text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text={\"Nothing found\"} color={\"#95a5a6\"} />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${(props) => props.bgImage}) center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background: url(${(props) => props.bgImage}) center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst ImdbLink = styled.a`\n  display: inline-block;\n  width: 40px;\n  background: url(${require(\"assets/imdbIcon.png\").default}) no-repeat center;\n  background-size: cover;\n  text-indent: -9999px;\n`;\n\nconst CompaniesContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0;\n`;\n\nconst Company = styled.img`\n  width: 50px;\n  :not(:last-child) {\n    margin-right: 15px;\n  }\n`;\n\nconst VideoContainer = styled.div``;\n\nconst Video = styled.iframe`\n  width: 400px;\n  height: 200px;\n`;\n\nconst CollectionContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst CollectionName = styled.h4`\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\n\nconst CollectionLink = styled(Link)`\n  display: block;\n  width: 100px;\n  height: 150px;\n  background: url(${(props) => props.bgImage}) center;\n  background-size: cover;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Naflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Naflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"assets/noPosterSmall.png\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date?.substring(0, 4)}\n            </Item>\n            <Divider>&middot;</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>&middot;</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            {result.imdb_id && (\n              <>\n                <Divider>&middot;</Divider>\n                <ImdbLink\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\n                  target=\"_blank\"\n                >\n                  IMDB\n                </ImdbLink>\n              </>\n            )}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <CompaniesContainer>\n            {result.production_companies &&\n              result.production_companies.map((company) =>\n                company.logo_path ? (\n                  <Company\n                    key={company.id}\n                    src={`https://image.tmdb.org/t/p/original${company.logo_path}`}\n                    alt={company.name}\n                  />\n                ) : null\n              )}\n          </CompaniesContainer>\n          <VideoContainer>\n            {result.videos && (\n              <Video\n                src={`https://www.youtube.com/embed/${result.videos.results[0]?.key}`}\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              />\n            )}\n          </VideoContainer>\n          <CollectionContainer>\n            {result.belongs_to_collection && (\n              <>\n                <CollectionName>\n                  {result.belongs_to_collection.name}\n                </CollectionName>\n                <CollectionLink\n                  bgImage={\n                    result.belongs_to_collection.poster_path\n                      ? `https://image.tmdb.org/t/p/original${result.belongs_to_collection.poster_path}`\n                      : require(\"assets/noPosterSmall.png\").default\n                  }\n                  to={`/collection/${result.belongs_to_collection.id}`}\n                  replace={true}\n                />\n              </>\n            )}\n          </CollectionContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    // const parsedId = parseInt(id);\n    if (isNaN(id)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(id));\n      } else {\n        ({ data: result } = await tvApi.showDetail(id));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Section from \"Components/Section\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${(props) => props.bgImage}) center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background: url(${(props) => props.bgImage}) center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst CollectionPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Naflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.name} | Naflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"assets/noPosterSmall.png\").default\n          }\n        />\n        <Data>\n          <Title>{result.name}</Title>\n          <ItemContainer>\n            {result.parts &&\n              result.parts.length > 0 &&\n              result.parts.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date?.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            {error && <Message color={\"#e74c3c\"} text={error} />}\n          </ItemContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nCollectionPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","import React from \"react\";\nimport { collectionsApi } from \"api\";\nimport CollectionPresenter from \"./CollectionPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    result: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    if (isNaN(id)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      ({ data: result } = await collectionsApi.collectionDetail(id));\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <CollectionPresenter result={result} error={error} loading={loading} />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Collection from \"Routes/Collection\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/collection/:id\" component={Collection} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}